//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FCF_Editor.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Variable_filepath {
            get {
                return ((string)(this["Variable_filepath"]));
            }
            set {
                this["Variable_filepath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Flowchart_folderpath {
            get {
                return ((string)(this["Flowchart_folderpath"]));
            }
            set {
                this["Flowchart_folderpath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color arrows_color {
            get {
                return ((global::System.Drawing.Color)(this["arrows_color"]));
            }
            set {
                this["arrows_color"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Purple")]
        public global::System.Drawing.Color scene_color {
            get {
                return ((global::System.Drawing.Color)(this["scene_color"]));
            }
            set {
                this["scene_color"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Silver")]
        public global::System.Drawing.Color selecter_color {
            get {
                return ((global::System.Drawing.Color)(this["selecter_color"]));
            }
            set {
                this["selecter_color"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color outerlabel_color {
            get {
                return ((global::System.Drawing.Color)(this["outerlabel_color"]));
            }
            set {
                this["outerlabel_color"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Calibri, 10pt, style=Bold")]
        public global::System.Drawing.Font scene_font {
            get {
                return ((global::System.Drawing.Font)(this["scene_font"]));
            }
            set {
                this["scene_font"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color scene_fore_color {
            get {
                return ((global::System.Drawing.Color)(this["scene_fore_color"]));
            }
            set {
                this["scene_fore_color"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Calibri, 10pt, style=Bold")]
        public global::System.Drawing.Font selecter_font {
            get {
                return ((global::System.Drawing.Font)(this["selecter_font"]));
            }
            set {
                this["selecter_font"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color selecter_fore_color {
            get {
                return ((global::System.Drawing.Color)(this["selecter_fore_color"]));
            }
            set {
                this["selecter_fore_color"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Calibri, 10pt, style=Bold")]
        public global::System.Drawing.Font outerlabel_font {
            get {
                return ((global::System.Drawing.Font)(this["outerlabel_font"]));
            }
            set {
                this["outerlabel_font"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color outerlabel_fore_color {
            get {
                return ((global::System.Drawing.Color)(this["outerlabel_fore_color"]));
            }
            set {
                this["outerlabel_fore_color"] = value;
            }
        }
    }
}
